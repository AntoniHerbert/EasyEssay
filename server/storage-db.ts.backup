import { type Essay, type InsertEssay, type UserCorrection, type InsertUserCorrection, type EssayLike, type InsertEssayLike, type Inspiration, type InsertInspiration, type UserProfile, type InsertUserProfile, type Friendship, type InsertFriendship, type UserMessage, type InsertUserMessage, type PeerReview, type InsertPeerReview, type CorrectionObject, type User, type InsertUser } from "@shared/schema";
import { randomUUID } from "crypto";
import { db } from "./db";
import { eq, and, or, desc } from "drizzle-orm";
import { users, essays, userCorrections, essayLikes, inspirations, userProfiles, friendships, userMessages, peerReviews } from "@shared/schema";

export interface IStorage {
  // User Authentication
  getUser(id: string): Promise<User | undefined>;
  getUserByUsername(username: string): Promise<User | undefined>;
  createUser(user: InsertUser): Promise<User>;
  // Essays
  getEssay(id: string): Promise<Essay | undefined>;
  getEssays(isPublic?: boolean, authorId?: string): Promise<Essay[]>;
  createEssay(essay: InsertEssay): Promise<Essay>;
  updateEssay(id: string, updates: Partial<InsertEssay>): Promise<Essay | undefined>;
  deleteEssay(id: string): Promise<boolean>;

  // User Corrections
  getUserCorrections(essayId: string): Promise<UserCorrection[]>;
  createUserCorrection(correction: InsertUserCorrection): Promise<UserCorrection>;
  updateUserCorrection(id: string, updates: Partial<InsertUserCorrection>): Promise<UserCorrection | undefined>;

  // Essay Likes
  getEssayLikes(essayId: string): Promise<EssayLike[]>;
  createEssayLike(like: InsertEssayLike): Promise<EssayLike>;
  deleteEssayLike(essayId: string, userId: string): Promise<boolean>;
  isEssayLiked(essayId: string, userId: string): Promise<boolean>;

  // Inspirations
  getInspirations(category?: string, type?: string): Promise<Inspiration[]>;
  getInspiration(id: string): Promise<Inspiration | undefined>;
  createInspiration(inspiration: InsertInspiration): Promise<Inspiration>;
  updateInspiration(id: string, updates: Partial<InsertInspiration>): Promise<Inspiration | undefined>;

  // User Profiles
  getAllUsers(): Promise<UserProfile[]>;
  getUserProfile(userId: string): Promise<UserProfile | undefined>;
  createUserProfile(profile: InsertUserProfile): Promise<UserProfile>;
  updateUserProfile(userId: string, updates: Partial<InsertUserProfile>): Promise<UserProfile | undefined>;

  // Friendships
  getFriendships(userId: string, status?: string): Promise<Friendship[]>;
  createFriendship(friendship: InsertFriendship): Promise<Friendship>;
  updateFriendship(id: string, updates: Partial<InsertFriendship>): Promise<Friendship | undefined>;

  // User Messages
  getUserMessages(userId: string, unreadOnly?: boolean): Promise<UserMessage[]>;
  createUserMessage(message: InsertUserMessage): Promise<UserMessage>;
  markMessageAsRead(id: string): Promise<UserMessage | undefined>;

  // Peer Review System
  getPeerReviews(essayId: string): Promise<PeerReview[]>;
  getPeerReview(essayId: string, reviewerId: string): Promise<PeerReview | undefined>;
  getPeerReviewById(id: string): Promise<PeerReview | undefined>;
  createPeerReview(review: InsertPeerReview): Promise<PeerReview>;
  updatePeerReview(id: string, updates: Partial<InsertPeerReview>): Promise<PeerReview | undefined>;
  addCorrectionToReview(reviewId: string, correction: CorrectionObject): Promise<PeerReview | undefined>;
}

export class MemStorage implements IStorage {
  private essays: Map<string, Essay>;
  private userCorrections: Map<string, UserCorrection>;
  private essayLikes: Map<string, EssayLike>;
  private inspirations: Map<string, Inspiration>;
  private userProfiles: Map<string, UserProfile>;
  private friendships: Map<string, Friendship>;
  private userMessages: Map<string, UserMessage>;
  private peerReviews: Map<string, PeerReview>;

  constructor() {
    this.essays = new Map();
    this.userCorrections = new Map();
    this.essayLikes = new Map();
    this.inspirations = new Map();
    this.userProfiles = new Map();
    this.friendships = new Map();
    this.userMessages = new Map();
    this.peerReviews = new Map();
    this.seedInspirations();
    this.seedMockData();
  }

  // Essays
  async getEssay(id: string): Promise<Essay | undefined> {
    return this.essays.get(id);
  }

  async getEssays(isPublic?: boolean, authorId?: string): Promise<Essay[]> {
    const allEssays = Array.from(this.essays.values());
    return allEssays.filter(essay => {
      if (isPublic !== undefined && essay.isPublic !== isPublic) return false;
      if (authorId && essay.authorId !== authorId) return false;
      return true;
    }).sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());
  }

  async createEssay(insertEssay: InsertEssay): Promise<Essay> {
    const id = randomUUID();
    const now = new Date();
    const essay: Essay = {
      ...insertEssay,
      id,
      createdAt: now,
      updatedAt: now,
      isPublic: insertEssay.isPublic ?? false,
      wordCount: insertEssay.wordCount ?? 0,
      isAnalyzed: insertEssay.isAnalyzed ?? false,
    };
    this.essays.set(id, essay);
    return essay;
  }

  async updateEssay(id: string, updates: Partial<InsertEssay>): Promise<Essay | undefined> {
    const essay = this.essays.get(id);
    if (!essay) return undefined;

    const updatedEssay: Essay = {
      ...essay,
      ...updates,
      updatedAt: new Date(),
    };
    this.essays.set(id, updatedEssay);
    return updatedEssay;
  }

  async deleteEssay(id: string): Promise<boolean> {
    return this.essays.delete(id);
  }

  // User Corrections
  async getUserCorrections(essayId: string): Promise<UserCorrection[]> {
    return Array.from(this.userCorrections.values())
      .filter(correction => correction.essayId === essayId)
      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());
  }

  async createUserCorrection(insertUserCorrection: InsertUserCorrection): Promise<UserCorrection> {
    const id = randomUUID();
    const userCorrection: UserCorrection = {
      ...insertUserCorrection,
      id,
      likes: 0,
      createdAt: new Date(),
    };
    this.userCorrections.set(id, userCorrection);
    return userCorrection;
  }

  async updateUserCorrection(id: string, updates: Partial<InsertUserCorrection>): Promise<UserCorrection | undefined> {
    const userCorrection = this.userCorrections.get(id);
    if (!userCorrection) return undefined;

    const updatedUserCorrection: UserCorrection = {
      ...userCorrection,
      ...updates,
    };
    this.userCorrections.set(id, updatedUserCorrection);
    return updatedUserCorrection;
  }

  // Essay Likes
  async getEssayLikes(essayId: string): Promise<EssayLike[]> {
    return Array.from(this.essayLikes.values())
      .filter(like => like.essayId === essayId);
  }

  async createEssayLike(insertEssayLike: InsertEssayLike): Promise<EssayLike> {
    const id = randomUUID();
    const like: EssayLike = {
      ...insertEssayLike,
      id,
      createdAt: new Date(),
    };
    this.essayLikes.set(id, like);
    return like;
  }

  async deleteEssayLike(essayId: string, userId: string): Promise<boolean> {
    const likeEntry = Array.from(this.essayLikes.entries())
      .find(([_, like]) => like.essayId === essayId && like.userId === userId);
    
    if (likeEntry) {
      this.essayLikes.delete(likeEntry[0]);
      return true;
    }
    return false;
  }

  async isEssayLiked(essayId: string, userId: string): Promise<boolean> {
    return Array.from(this.essayLikes.values())
      .some(like => like.essayId === essayId && like.userId === userId);
  }

  // Inspirations
  async getInspirations(category?: string, type?: string): Promise<Inspiration[]> {
    const allInspirations = Array.from(this.inspirations.values());
    return allInspirations.filter(inspiration => {
      if (category && inspiration.category !== category) return false;
      if (type && inspiration.type !== type) return false;
      return inspiration.isPublic;
    }).sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());
  }

  async getInspiration(id: string): Promise<Inspiration | undefined> {
    return this.inspirations.get(id);
  }

  async createInspiration(insertInspiration: InsertInspiration): Promise<Inspiration> {
    const id = randomUUID();
    const now = new Date();
    const inspiration: Inspiration = {
      ...insertInspiration,
      id,
      createdAt: now,
      updatedAt: now,
      isPublic: insertInspiration.isPublic ?? true,
      wordCount: insertInspiration.wordCount ?? 0,
      readTime: insertInspiration.readTime ?? 5,
      tags: insertInspiration.tags ?? [],
      source: insertInspiration.source ?? null,
      difficulty: insertInspiration.difficulty ?? "intermediate",
    };
    this.inspirations.set(id, inspiration);
    return inspiration;
  }

  async updateInspiration(id: string, updates: Partial<InsertInspiration>): Promise<Inspiration | undefined> {
    const inspiration = this.inspirations.get(id);
    if (!inspiration) return undefined;

    const updatedInspiration: Inspiration = {
      ...inspiration,
      ...updates,
      updatedAt: new Date(),
    };
    this.inspirations.set(id, updatedInspiration);
    return updatedInspiration;
  }

  // User Profiles
  async getAllUsers(): Promise<UserProfile[]> {
    return Array.from(this.userProfiles.values())
      .sort((a, b) => b.totalEssays - a.totalEssays); // Sort by essay count for discovery
  }

  async getUserProfile(userId: string): Promise<UserProfile | undefined> {
    return Array.from(this.userProfiles.values())
      .find(profile => profile.userId === userId);
  }

  async createUserProfile(insertUserProfile: InsertUserProfile): Promise<UserProfile> {
    const id = randomUUID();
    const now = new Date();
    const profile: UserProfile = {
      ...insertUserProfile,
      id,
      joinedAt: now,
      lastActiveAt: now,
      totalEssays: insertUserProfile.totalEssays ?? 0,
      totalWords: insertUserProfile.totalWords ?? 0,
      averageScore: insertUserProfile.averageScore ?? 0,
      streak: insertUserProfile.streak ?? 0,
      level: insertUserProfile.level ?? 1,
      experience: insertUserProfile.experience ?? 0,
      bio: insertUserProfile.bio ?? null,
      avatar: insertUserProfile.avatar ?? null,
    };
    this.userProfiles.set(id, profile);
    return profile;
  }

  async updateUserProfile(userId: string, updates: Partial<InsertUserProfile>): Promise<UserProfile | undefined> {
    const profile = Array.from(this.userProfiles.values())
      .find(p => p.userId === userId);
    if (!profile) return undefined;

    const updatedProfile: UserProfile = {
      ...profile,
      ...updates,
      lastActiveAt: new Date(),
    };
    this.userProfiles.set(profile.id, updatedProfile);
    return updatedProfile;
  }

  // Friendships
  async getFriendships(userId: string, status?: string): Promise<Friendship[]> {
    return Array.from(this.friendships.values())
      .filter(friendship => {
        const isUserInvolved = friendship.requesterId === userId || friendship.addresseeId === userId;
        if (!isUserInvolved) return false;
        if (status && friendship.status !== status) return false;
        return true;
      })
      .sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());
  }

  async createFriendship(insertFriendship: InsertFriendship): Promise<Friendship> {
    const id = randomUUID();
    const now = new Date();
    const friendship: Friendship = {
      ...insertFriendship,
      id,
      createdAt: now,
      updatedAt: now,
      status: insertFriendship.status ?? "pending",
    };
    this.friendships.set(id, friendship);
    return friendship;
  }

  async updateFriendship(id: string, updates: Partial<InsertFriendship>): Promise<Friendship | undefined> {
    const friendship = this.friendships.get(id);
    if (!friendship) return undefined;

    const updatedFriendship: Friendship = {
      ...friendship,
      ...updates,
      updatedAt: new Date(),
    };
    this.friendships.set(id, updatedFriendship);
    return updatedFriendship;
  }

  // User Messages
  async getUserMessages(userId: string, unreadOnly?: boolean): Promise<UserMessage[]> {
    return Array.from(this.userMessages.values())
      .filter(message => {
        // Return messages where user is either sender or recipient
        const isInvolved = message.toUserId === userId || message.fromUserId === userId;
        if (!isInvolved) return false;
        // For unreadOnly filter, only count messages TO the user that are unread
        if (unreadOnly && (message.toUserId !== userId || message.isRead)) return false;
        return true;
      })
      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());
  }

  async createUserMessage(insertUserMessage: InsertUserMessage): Promise<UserMessage> {
    const id = randomUUID();
    const message: UserMessage = {
      ...insertUserMessage,
      id,
      createdAt: new Date(),
      isRead: insertUserMessage.isRead ?? false,
      type: insertUserMessage.type ?? "text",
      relatedEssayId: insertUserMessage.relatedEssayId ?? null,
    };
    this.userMessages.set(id, message);
    return message;
  }

  async markMessageAsRead(id: string): Promise<UserMessage | undefined> {
    const message = this.userMessages.get(id);
    if (!message) return undefined;

    const updatedMessage: UserMessage = {
      ...message,
      isRead: true,
    };
    this.userMessages.set(id, updatedMessage);
    return updatedMessage;
  }

  // Peer Review System Implementation
  async getPeerReviews(essayId: string): Promise<PeerReview[]> {
    return Array.from(this.peerReviews.values()).filter(r => r.essayId === essayId);
  }

  async getPeerReview(essayId: string, reviewerId: string): Promise<PeerReview | undefined> {
    return Array.from(this.peerReviews.values()).find(
      r => r.essayId === essayId && r.reviewerId === reviewerId
    );
  }

  async getPeerReviewById(id: string): Promise<PeerReview | undefined> {
    return this.peerReviews.get(id);
  }

  async createPeerReview(review: InsertPeerReview): Promise<PeerReview> {
    const newReview: PeerReview = {
      id: randomUUID(),
      ...review,
      grammarScore: review.grammarScore ?? 100,
      styleScore: review.styleScore ?? 100,
      clarityScore: review.clarityScore ?? 100,
      structureScore: review.structureScore ?? 100,
      contentScore: review.contentScore ?? 100,
      researchScore: review.researchScore ?? 100,
      overallScore: review.overallScore ?? 600,
      corrections: (review.corrections ?? []) as CorrectionObject[],
      reviewComment: review.reviewComment ?? null,
      isSubmitted: review.isSubmitted ?? false,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.peerReviews.set(newReview.id, newReview);
    return newReview;
  }

  async updatePeerReview(id: string, updates: Partial<InsertPeerReview>): Promise<PeerReview | undefined> {
    const review = this.peerReviews.get(id);
    if (review) {
      const updatedReview: PeerReview = { 
        ...review, 
        ...updates,
        corrections: (updates.corrections ?? review.corrections) as CorrectionObject[],
        updatedAt: new Date() 
      };
      this.peerReviews.set(id, updatedReview);
      return updatedReview;
    }
    return undefined;
  }

  async addCorrectionToReview(reviewId: string, correction: CorrectionObject): Promise<PeerReview | undefined> {
    const review = this.peerReviews.get(reviewId);
    if (review) {
      const updatedReview: PeerReview = {
        ...review,
        corrections: [...review.corrections, correction] as CorrectionObject[],
        updatedAt: new Date()
      };
      this.peerReviews.set(reviewId, updatedReview);
      return updatedReview;
    }
    return undefined;
  }

  private seedInspirations() {
    // Seed some sample inspirations
    const inspirationsData = [
      {
        title: "On the Art of Writing",
        author: "Arthur Quiller-Couch",
        content: `The best writing is not about the writer—it is about the reader. When you sit down to write, your goal is not to show how clever you are, but to help your reader understand something important. Clear prose is the result of clear thinking, and clear thinking comes from understanding your subject deeply and caring about your reader genuinely. 

Every word must earn its place. Every sentence must advance your argument or deepen your reader's understanding. Precision in language reflects precision in thought, and precision in thought leads to powerful communication.

Remember that writing is thinking made visible. When you struggle to write clearly, you are really struggling to think clearly. The difficulty is not in your pen—it is in your mind. Wrestle with your ideas until they submit to clarity, and then your words will flow with purpose and power.`,
        category: "literature",
        type: "excerpt",
        source: "On the Art of Writing (1916)",
        tags: ["writing craft", "clarity", "communication"],
        difficulty: "intermediate",
        wordCount: 150,
        readTime: 2,
        isPublic: true,
      },
      {
        title: "The Power of Scientific Thinking",
        author: "Carl Sagan",
        content: `Science is not only compatible with spirituality; it is a profound source of spirituality. When we recognize our place in an immensity of light-years and in the passage of ages, when we grasp the intricacy, beauty, and subtlety of life, then that soaring feeling, that sense of elation and humility combined, is surely spiritual.

The notion that science and spirituality are somehow mutually exclusive does a disservice to both. Science is not only about cold, hard facts—it's about wonder, about awe, about the incredible interconnectedness of all things. The more we learn about the universe, the more we realize how much we don't know, and that realization should fill us with humility and curiosity, not fear.`,
        category: "science",
        type: "excerpt",
        source: "The Demon-Haunted World",
        tags: ["science", "spirituality", "wonder", "universe"],
        difficulty: "intermediate",
        wordCount: 130,
        readTime: 2,
        isPublic: true,
      },
      {
        title: "The Examined Life",
        author: "Socrates",
        content: `The unexamined life is not worth living. This famous declaration from my defense in Athens speaks to the core of human existence. We must constantly question our beliefs, our actions, and our assumptions. Only through rigorous self-examination can we hope to live a life of meaning and virtue.

Wisdom begins with knowing that we know nothing. The moment we think we have all the answers is the moment we stop growing, stop learning, stop becoming better human beings. True knowledge is understanding the limits of our knowledge.

I have spent my life as a gadfly, stinging the lazy horse of Athens into action, forcing people to think about their lives and their choices. This is not comfortable work, neither for me nor for those I question. But comfort is not the goal—truth is the goal, and truth requires courage.`,
        category: "philosophy",
        type: "excerpt",
        source: "Plato's Apology",
        tags: ["wisdom", "self-knowledge", "virtue", "truth"],
        difficulty: "advanced",
        wordCount: 160,
        readTime: 2,
        isPublic: true,
      },
      {
        title: "The Digital Revolution",
        author: "Tim Berners-Lee",
        content: `The original idea of the web was that it should be a collaborative space where you could communicate through sharing information. The dream behind the Web is of a common information space in which we communicate by sharing information.

What we have today is not quite that vision. We have created a world wide web, but in many ways it has become a world wide surveillance system. The power of the web lies not in its technology, but in its ability to connect human beings and allow them to work together in ways that were never before possible.

We must reclaim the web as a force for good, as a tool for human empowerment rather than human exploitation. This requires not just technological solutions, but social and political ones as well. The future of the web is the future of democracy itself.`,
        category: "technology",
        type: "excerpt",
        source: "Weaving the Web",
        tags: ["internet", "technology", "democracy", "collaboration"],
        difficulty: "intermediate",
        wordCount: 140,
        readTime: 2,
        isPublic: true,
      },
      {
        title: "Climate Change and Human Responsibility",
        author: "Elizabeth Kolbert",
        content: `We are living through the sixth mass extinction, and this time, we are the asteroid. The rate of species loss today is estimated to be between 1,000 and 10,000 times higher than the natural background rate. Unlike the five previous mass extinctions, this one is entirely of our own making.

Climate change is not just about polar bears or melting ice caps—it's about the fundamental systems that make life on Earth possible. When we alter the chemistry of the atmosphere and the oceans, we are conducting a vast experiment with the only planet we have.

The challenge is not just technological or economic—it's moral. We have a responsibility to future generations to leave them a world that is at least as rich and vibrant as the one we inherited. This requires unprecedented cooperation and sacrifice, but the alternative is unthinkable.`,
        category: "environment",
        type: "excerpt",
        source: "The Sixth Extinction",
        tags: ["climate change", "extinction", "environment", "responsibility"],
        difficulty: "intermediate",
        wordCount: 150,
        readTime: 2,
        isPublic: true,
      },
    ];

    inspirationsData.forEach(async (data) => {
      await this.createInspiration(data);
    });
  }

  private async seedMockData() {
    // Create mock user profiles
    const mockUsers = [
      {
        userId: "current-user",
        username: "writer_alex",
        displayName: "Alex Chen",
        bio: "Passionate writer exploring the intersection of technology and humanity. Always learning, always improving.",
        avatar: "",
        totalEssays: 12,
        totalWords: 15420,
        averageScore: 87,
        streak: 7,
        level: 3,
        experience: 2450,
      },
      {
        userId: "user-sarah",
        username: "sarah_writes",
        displayName: "Sarah Martinez",
        bio: "Environmental science writer and nature enthusiast. Advocating for a sustainable future through words.",
        avatar: "",
        totalEssays: 8,
        totalWords: 10200,
        averageScore: 91,
        streak: 3,
        level: 2,
        experience: 1680,
      },
      {
        userId: "user-james",
        username: "james_philosopher",
        displayName: "James Thompson",
        bio: "Philosophy professor turned digital nomad. Writing about ethics, consciousness, and the meaning of life.",
        avatar: "",
        totalEssays: 24,
        totalWords: 32500,
        averageScore: 93,
        streak: 12,
        level: 5,
        experience: 4890,
      },
      {
        userId: "user-maria",
        username: "maria_stories",
        displayName: "Maria Rodriguez",
        bio: "Storyteller at heart. Crafting narratives that bridge cultures and connect hearts across continents.",
        avatar: "",
        totalEssays: 6,
        totalWords: 7800,
        averageScore: 85,
        streak: 2,
        level: 2,
        experience: 1200,
      },
    ];

    for (const userData of mockUsers) {
      await this.createUserProfile(userData);
    }

    // Map author IDs to names
    const authorNameMap: Record<string, string> = {
      "current-user": "Alex Chen",
      "user-sarah": "Sarah Martinez", 
      "user-james": "James Thompson",
      "user-maria": "Maria Rodriguez",
    };

    // Create mock essays
    const mockEssays = [
      {
        title: "The Future of Human-AI Collaboration",
        content: `As we stand at the precipice of a new era in technological advancement, the relationship between humans and artificial intelligence becomes increasingly complex and fascinating. Rather than viewing AI as a replacement for human creativity and intelligence, we must embrace it as a powerful collaborator that can amplify our natural abilities.

The key to successful human-AI collaboration lies in understanding our complementary strengths. While AI excels at processing vast amounts of data, recognizing patterns, and performing repetitive tasks with unwavering precision, humans bring creativity, emotional intelligence, ethical reasoning, and the ability to make intuitive leaps that often lead to breakthrough innovations.

Consider the field of medical diagnosis, where AI systems can analyze thousands of medical images in minutes, identifying patterns that might escape even the most experienced radiologist. However, it's the human physician who provides the context, considers the patient's unique circumstances, and makes the final decision about treatment. This partnership doesn't diminish the doctor's role; it enhances it by freeing them to focus on what they do best: caring for patients and making complex judgments.

In creative industries, we're seeing similar partnerships emerge. AI can generate multiple variations of a design concept, compose background music, or even draft initial versions of written content. But it's the human artist who provides the vision, makes the aesthetic judgments, and infuses the work with meaning and emotion that resonates with other humans.

The challenge moving forward is ensuring that this collaboration remains truly collaborative rather than exploitative. We must design AI systems that augment human capabilities rather than replace them entirely. This requires thoughtful consideration of how we integrate these technologies into our workflows and our lives.

Education will play a crucial role in preparing future generations for this collaborative relationship. Rather than teaching students to compete with AI, we should focus on developing uniquely human skills: critical thinking, creativity, empathy, and the ability to work effectively with intelligent systems.

As we navigate this transition, we must also address the ethical implications. Who is responsible when an AI-assisted decision goes wrong? How do we ensure that the benefits of human-AI collaboration are distributed fairly across society? These questions don't have easy answers, but they're conversations we must have now, before the technology outpaces our ability to govern it responsibly.

The future of human-AI collaboration is not predetermined. It will be shaped by the choices we make today about how to develop, deploy, and integrate these powerful technologies. By approaching this future with wisdom, intention, and a commitment to human flourishing, we can create a world where humans and AI work together to solve the great challenges of our time.`,
        authorId: "current-user",
        authorName: "Alex Chen",
        wordCount: 450,
        isPublic: true,
        status: "published",
      },
      {
        title: "Climate Change: A Personal Reflection on Our Shared Future",
        content: `I used to think climate change was someone else's problem. Living in a comfortable suburb, driving my gas-powered car to work, and buying whatever I wanted at the grocery store without considering its environmental impact, I felt disconnected from the global crisis unfolding around us. That changed during a trip to the Pacific Northwest last summer.

Standing before what used to be a glacier, now reduced to bare rock and scattered ice patches, I felt the weight of our collective impact on the planet. The park ranger explained that this glacier had retreated more in the past decade than in the previous century. The visual evidence was undeniable, and suddenly, climate change wasn't an abstract concept from news reports—it was a lived reality staring me in the face.

But this essay isn't just about that moment of realization. It's about what I learned in the months that followed, as I grappled with my own role in this crisis and what it means for all of us moving forward.

The first thing I discovered is that individual actions, while important, are not sufficient on their own. Yes, I started biking to work, eating less meat, and being more conscious about my consumption habits. These changes made me feel better about my personal impact, but they also highlighted the limitations of individual responsibility in addressing a systemic problem.

The real challenge of climate change isn't just technological or even political—it's psychological. We're asking people to make sacrifices today for benefits they may never directly see, to care about people they'll never meet, and to fundamentally change systems that have provided comfort and prosperity for generations.

This is where the power of storytelling becomes crucial. Statistics about rising temperatures and sea levels are important, but they don't move people to action the way a story about a coastal community facing displacement does. We need narratives that help people connect emotionally with the reality of climate change and envision a future worth working toward.

I've also learned that despair is a luxury we can't afford. Yes, the science is sobering, and yes, we've already locked in certain changes that will affect generations to come. But history shows us that humans are remarkably adaptable and innovative when faced with existential threats. The same species that created the problems facing our planet also has the capacity to solve them.

The transition to renewable energy is happening faster than most experts predicted just a decade ago. Young people around the world are demanding action from their governments and changing their own behaviors in response to the crisis. Technologies we couldn't have imagined are being developed to capture carbon, improve energy efficiency, and create sustainable alternatives to products that have traditionally harmed the environment.

What gives me hope is seeing how climate action is becoming intergenerational. My teenage niece talks about climate change with an urgency and sophistication that puts many adults to shame, while my 70-year-old neighbor has started composting and installed solar panels on his roof. This isn't just a young person's issue or an old person's issue—it's a human issue that requires all of us to work together.

Moving forward, I believe the key is finding ways to make climate action personally meaningful and socially rewarding. People are more likely to change climate change will define the next several decades of human history. How we respond to this challenge will determine not just the health of our planet, but the kind of society we become in the process. I choose to believe that we can rise to meet this moment, not just as individuals, but as a global community committed to leaving a better world for those who come after us.

The glacier I saw last summer may never return to its former size, but that doesn't mean we should give up on protecting what remains. Every action we take, every conversation we have, and every choice we make is an opportunity to bend the arc of history toward a more sustainable and just future.`,
        authorId: "user-sarah",
        authorName: "Sarah Martinez",
        wordCount: 520,
        isPublic: true,
        status: "published",
      },
      {
        title: "The Art of Slow Living in a Fast World",
        content: `In a world obsessed with productivity, efficiency, and constant optimization, I've discovered something revolutionary: the profound beauty of doing things slowly. Not out of laziness or inability to keep up, but as a deliberate choice to reclaim depth and meaning in an increasingly superficial world.

The concept of slow living isn't new, but it feels more essential now than ever. As our phones buzz with notifications, our calendars overflow with commitments, and our news feeds assault us with an endless stream of urgent information, the simple act of slowing down becomes a radical form of self-care and resistance.

I began this journey accidentally. A few months ago, I injured my ankle and was forced to walk more slowly than usual. What I initially saw as an inconvenience became a revelation. I noticed things I had walked past hundreds of times: the intricate patterns of bark on trees lining my street, the way afternoon light filtered through leaves to create dancing shadows on the sidewalk, the conversations floating from open windows that told stories of the lives being lived behind them.

This enforced slowness made me realize how much of my life I had been experiencing at surface level, rushing from one obligation to the next without truly being present for any of them. I was living in a constant state of anticipation, always focused on the next thing rather than the current moment.

Slow living isn't about doing everything at a snail's pace. It's about being intentional with your attention and energy. It's choosing depth over breadth, quality over quantity, and presence over productivity. It's the difference between inhaling a meal while checking email and savoring each bite while engaging in meaningful conversation.

In my kitchen, this philosophy has transformed my relationship with cooking. Instead of viewing meal preparation as a chore to be completed as quickly as possible, I've learned to see it as a meditation. The rhythmic chopping of vegetables, the gradual transformation of ingredients into something nourishing and beautiful, the way aromas fill the space and signal the transition from day to evening—these become anchors that ground me in the present moment.

The same principle applies to my work. Rather than trying to juggle multiple projects simultaneously, I've started focusing on one thing at a time, giving it my full attention until it's complete. This approach initially felt inefficient, but I've discovered that the quality of my work has improved dramatically, and paradoxically, I'm often more productive than when I was constantly multitasking.

Reading has become another refuge in slow living. In an age of tweet-length attention spans and clickbait headlines, the act of settling into a book for hours at a time feels like a superpower. There's something profoundly satisfying about following an author's thoughts as they develop over hundreds of pages, allowing ideas to marinate in your mind rather than consuming them in bite-sized chunks.

But perhaps the most significant change has been in my relationships. When I'm with friends or family, I try to resist the urge to check my phone or think about what I need to do later. I ask deeper questions and listen more carefully to the answers. I've found that these slower, more intentional interactions are incredibly nourishing in ways that quick catch-ups and surface-level conversations never were.

This isn't to romanticize slowness or suggest that everyone should or can adopt this approach wholesale. We live in a complex world with real demands and responsibilities. But I believe there's wisdom in questioning our default assumption that faster is always better.

Sometimes the most productive thing you can do is take a long walk without a destination. Sometimes the most efficient way to solve a problem is to stop trying to solve it and let your subconscious work on it while you tend to your garden. Sometimes the best way to connect with others is to put away your phone and share a meal that took all afternoon to prepare.

The art of slow living is really the art of choosing what deserves your full presence. It's about recognizing that in a world that profits from your distraction and hurry, your attention is both your most precious resource and your most powerful form of resistance.

As I continue on this journey, I'm learning that slowness isn't just a tempo—it's a way of honoring the richness and complexity of human experience. It's a reminder that we are not machines to be optimized, but conscious beings capable of wonder, reflection, and deep connection with ourselves and the world around us.

In slowing down, I haven't fallen behind. I've found my way back to what matters most.`,
        authorId: "user-james",
        authorName: "James Thompson",
        wordCount: 680,
        isPublic: true,
        status: "published",
      },
      {
        title: "Learning Spanish at 30: A Journey of Cultural Discovery",
        content: `"¿Por qué empezaste a aprender español?" my teacher asked during our first conversation class. Why did I start learning Spanish? The answer seemed simple at first—career advancement, travel opportunities, brain exercise—but as I've progressed on this linguistic journey, I've discovered that learning a new language as an adult is about so much more than practical benefits.

At 30, I thought I was too old to become truly fluent in another language. I'd heard about critical periods and worried that my brain had lost its plasticity. But what I've learned over the past year of studying Spanish is that while children might have certain advantages in language acquisition, adults bring something equally valuable: life experience, cultural curiosity, and the ability to make connections across languages and concepts.

The first few months were humbling in the most wonderful way. I, who pride myself on being articulate and expressive in English, was suddenly reduced to pointing at objects and speaking in broken, simplified sentences. "Me gusta la comida" became a complete thought worthy of celebration. This return to linguistic childhood was initially frustrating, but it taught me patience and reminded me of the miracle of human communication.

What surprised me most was how learning Spanish began changing my relationship with English. I started noticing cognates—words that share common roots across languages—and suddenly saw connections I'd never recognized before. "Hospital" in Spanish is "hospital." "Natural" is "natural." These similarities made me think about the shared human experiences that transcend linguistic boundaries: we all need medical care, we all live in the natural world, we all seek to communicate our thoughts and feelings to others.

But it was the differences that taught me the most. Spanish has two verbs for "to be"—ser and estar—and learning to navigate this distinction has given me a new framework for thinking about identity versus state of being. In English, when I say "I am tired," I'm using the same verb as when I say "I am a teacher." Spanish forces you to distinguish between temporary states and permanent characteristics, and this linguistic requirement has made me more conscious of these distinctions in my daily thinking.

The cultural immersion that comes with language learning has been equally transformative. Through Spanish media, literature, and conversations with native speakers, I've gained insights into perspectives that were previously inaccessible to me. I've read poetry that loses its music in translation, watched films that reveal humor and social commentary specific to Spanish-speaking cultures, and had conversations about concepts that don't have direct English equivalents.

One of the most profound experiences was reading "Cien años de soledad" by Gabriel García Márquez in its original Spanish. While I'd read an English translation years before, experiencing Márquez's magical realism in the language he wrote it in felt like discovering a completely different book. The rhythm of the sentences, the way Spanish allows for longer, more fluid thoughts, the cultural references that came through more clearly—all of these elements combined to create a reading experience that was both familiar and entirely new.

Language learning has also connected me with communities I never would have encountered otherwise. My conversation partner, Elena, is a retired teacher from Mexico City who shares stories about her grandchildren and gives me insights into Mexican culture that no textbook could provide. My Spanish book club meets monthly at a local café, and our discussions about literature range from pronunciation corrections to deep conversations about cultural differences and universal human experiences.

The practical benefits I originally sought have certainly materialized. I've been able to help Spanish-speaking customers at work, navigate my travels through Latin America with greater confidence, and even dream occasionally in Spanish (which still amazes me). But these practical gains pale in comparison to the personal transformation that comes with opening your mind to a new way of expressing and understanding the world.

Perhaps most importantly, learning Spanish has taught me that fluency isn't just about perfect grammar or accent-free pronunciation. It's about being willing to make mistakes, to laugh at yourself, and to embrace the vulnerability that comes with being a beginner again. Every conversation where I successfully communicate an idea, every joke I understand, every moment when I think directly in Spanish rather than translating from English—these are victories that remind me that learning is a lifelong process, not a destination.

As I continue this journey, I'm motivated not just by the goal of fluency, but by the ongoing discovery of how language shapes thought, how communication creates connection, and how stepping outside our linguistic comfort zones can expand our understanding of ourselves and the world around us.

"¿Por qué empezaste a aprender español?" Because I wanted to understand more than just the words—I wanted to understand the world through new eyes. And with each passing day, I'm finding that this journey has taught me as much about my own language and culture as it has about others.`,
        authorId: "user-maria",
        authorName: "Maria Rodriguez",
        wordCount: 620,
        isPublic: true,
        status: "published",
      },
      {
        title: "My Morning Routine: A Personal Experiment",
        content: `For the past month, I've been experimenting with different morning routines, trying to find the perfect formula for starting my day. After reading countless productivity blogs and self-help books, I decided to test various approaches and see what actually works for me as opposed to what works for others.

The first week, I tried the "5 AM Club" approach. Waking up at 5 AM, I would meditate for 20 minutes, exercise for 20 minutes, and then journal for 20 minutes. In theory, this sounded perfect. In practice, I was exhausted by noon and found myself drinking more coffee than was probably healthy.

The second week, I switched to a more gentle approach: waking up at 7 AM, making a proper breakfast, reading for 30 minutes, and then easing into my work day. This felt more sustainable, but I missed the sense of accomplishment that came from completing meaningful activities before the rest of the world woke up.

Week three brought the "minimal routine" experiment. I did only what was absolutely necessary: shower, coffee, and out the door. While this was efficient, I found that without some intentional morning practices, I felt reactive rather than proactive throughout the day.

Week four was my attempt at finding the middle ground. I wake up at 6:30 AM, spend 10 minutes writing in a gratitude journal, do some light stretching, eat a healthy breakfast while listening to a podcast, and review my priorities for the day. This routine takes about 45 minutes total and feels both achievable and beneficial.

What I've learned from this experiment is that the "perfect" morning routine isn't one-size-fits-all. It needs to align with your natural rhythms, your life circumstances, and your personal goals. For me, the key elements are some form of mindfulness practice, physical movement (even if it's gentle), nourishment, and intentional transition into the day.

The most surprising discovery was that consistency matters more than the specific activities. Even when my routine was imperfect, having some structure in the morning helped me feel more grounded and purposeful throughout the day.`,
        authorId: "current-user",
        authorName: "Alex Chen",
        wordCount: 320,
        isPublic: false,
        status: "draft",
      }
    ];

    for (const essayData of mockEssays) {
      await this.createEssay(essayData);
    }

    // Create mock friendships
    const mockFriendships = [
      {
        requesterId: "user-sarah",
        addresseeId: "current-user",
        status: "accepted" as const,
      },
      {
        requesterId: "user-james",
        addresseeId: "current-user",
        status: "pending" as const,
      },
      {
        requesterId: "current-user",
        addresseeId: "user-maria",
        status: "accepted" as const,
      },
    ];

    for (const friendshipData of mockFriendships) {
      await this.createFriendship(friendshipData);
    }

    // Create mock messages
    const mockMessages = [
      {
        fromUserId: "user-sarah",
        toUserId: "current-user",
        message: "Hi Alex! I loved your essay about human-AI collaboration. The section about medical diagnosis was particularly insightful. Have you considered writing about AI ethics next?",
        type: "text" as const,
        isRead: false,
      },
      {
        fromUserId: "user-james",
        toUserId: "current-user",
        message: "Hey there! I'd love to connect and perhaps collaborate on some philosophical writing pieces. Your perspective on technology and humanity really resonates with me.",
        type: "friend_request" as const,
        isRead: false,
      },
      {
        fromUserId: "user-maria",
        toUserId: "current-user",
        message: "Thanks for accepting my friend request! I'm excited to read more of your work and perhaps get some feedback on my language learning essays.",
        type: "text" as const,
        isRead: true,
      },
    ];

    for (const messageData of mockMessages) {
      await this.createUserMessage(messageData);
    }

    // Create some community corrections
    const publicEssays = Array.from(this.essays.values()).filter(e => e.isPublic);
    if (publicEssays.length > 0) {
      const mockUserCorrections = [
        {
          essayId: publicEssays[0].id,
          userId: "user-sarah",
          userName: "Sarah Martinez",
          originalText: "Rather than viewing AI as a replacement for human creativity",
          suggestedText: "Rather than viewing AI as a complete replacement for human creativity",
          explanation: "Adding 'complete' emphasizes that AI might replace some aspects but not all of human creativity.",
          startIndex: 150,
          endIndex: 200,
        },
        {
          essayId: publicEssays[1].id,
          userId: "user-james",
          userName: "James Thompson",
          originalText: "I used to think climate change was someone else's problem",
          suggestedText: "I used to think climate change was primarily someone else's problem",
          explanation: "The word 'primarily' acknowledges that while it affects everyone, some people bear more responsibility.",
          startIndex: 50,
          endIndex: 95,
        },
      ];

      for (const userCorrectionData of mockUserCorrections) {
        await this.createUserCorrection(userCorrectionData);
      }
    }

    // Create some essay likes
    for (const essay of publicEssays.slice(0, 3)) {
      const mockLikes = [
        { essayId: essay.id, userId: "user-sarah" },
        { essayId: essay.id, userId: "user-james" },
        { essayId: essay.id, userId: "user-maria" },
      ];

      for (const likeData of mockLikes) {
        await this.createEssayLike(likeData);
      }
    }
  }
}

export const storage = new MemStorage();
